#!/bin/sh

dry=false
if [ "$1" = "-d" ] ; then
	dry=true
	shift
fi


if [ "$#" != 1 ] ; then
	echo "syntax: git perl [-d] PERL_EXPRESSION\n\nThe perl expression will be applied to all files not ignored by git.\nChanges are displayed and a git-style undo is provided.\n\nOPTIONS:\n  -d   Dry run, no files are modified.\n\nEXAMPLES:\n  git perl s/ToDo/Done/g\n  git perl s/x(.)x/y\\1y/g"
	exit 1
fi

if [ $dry = "false" ] ; then
	git add -A
	git commit -q -m "Backup commit before git perl $1 $2"
	backup=`git rev-parse HEAD`
	git reset -q HEAD^
fi

git ls-files -co --exclude-standard | while read -r a ; do
	if [ -e "$a" ] ; then
		cat "$a" | perl -pe "$1" > "$a".perl
		if cmp -s "$a" "$a".perl ; then
			rm "$a".perl
		else
			git diff --color --no-index -- "$a" "$a".perl | tail -n +1 >> perl.$$.log
			if [ $dry = "true" ] ; then
				rm "$a".perl
			else
				mv "$a".perl "$a"
			fi
		fi
	fi
done

pager="`git config --get core.pager`"
if [ "$pager" = "" ] ; then
	pager="less -FXRS"
fi
cat perl.$$.log | $pager
rm perl.$$.log

if [ $dry = "false" ] ; then
	echo "undo: git reset --hard $backup ; git reset -q HEAD^"
fi

